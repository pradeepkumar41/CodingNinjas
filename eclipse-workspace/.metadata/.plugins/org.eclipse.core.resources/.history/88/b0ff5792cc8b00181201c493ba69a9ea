package LinkListQuestion;

import DataStructure.node;


class node {
	public int data;
	public node next;
	public node(int data) {
		this.data=data;
		//	  	this.next = null;
	}
}






public class RearrangeTheLinkList {

	static void reverseIterativeHalf(node head)
	{
		node mid=getMidNode(head);
		node prev,current,next;
		prev=mid;
		current=mid.next;
		next=mid.next.next;

		while(current!=null)
		{ current.next=prev;
		prev=current;
		current=next;
		if(next!=null)
			next=next.next;
		}

		//link list is reversed now;
	}
	

	static node getMidNode(node head)
	{
		node slow,fast;
		slow=head;
		fast=head;
	
		while(fast!=null)
		{if(fast.next==null || fast.next.next==null)
			break;
		fast=fast.next.next;
		//prev=slow;
		slow=slow.next;		//slow is going one step at each iteration
		}
		return slow;	//pointer to the mid node
	}
	
	
	public static ListNode changelist(ListNode head) {
		
		
		
		
		
		
		
		
		
		
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
