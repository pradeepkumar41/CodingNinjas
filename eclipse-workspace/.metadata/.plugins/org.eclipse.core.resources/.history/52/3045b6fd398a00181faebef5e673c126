package DataStructure;


public class Solution {


	public static  LinkedListNode<Integer> bubbleSort(LinkedListNode<Integer> head) {

		LinkedListNode<Integer> curr1,curr2,prev1,next;
		int n=length(head);
		for(int i=0;i<n-1;i++) {

			prev1=null;
			curr1=head;
			curr2=head.next;
			next=curr2.next;

			for(int j=0;j<n-i;j++) {
				//System.out.println("here2");
				if(curr1.data>curr2.data) {
					//swap is required

					//System.out.println("here1");
					if(curr1.equals(head) || curr2.equals(head))
					{
						//one of the position contain the head
						curr2.next=head;
						curr1.next=next;
						head=curr2;
						//System.out.println("here");

						//Incrementing the pointers		
						prev1=curr2;
						curr2=next;
						if(curr2==null)
							break;
						else
							next=next.next;
					}				
					else {
						curr2.next=curr1;
						curr1.next=next;
						prev1.next=curr2;

						//Incrementing the pointers
						prev1=curr2;
						curr2=next;
						if(curr2==null)
							break;
						else
							next=next.next;
					}
				}
				else {
					prev1=curr1;
					curr1=curr2;
					curr2=next;
					 if(curr2==null)
						break;
					 else
						next=next.next;						
			        }
			}
		}
		return head;
	}

	static int length  (LinkedListNode<Integer> head) {
		LinkedListNode<Integer>  temp=head;
		int length=0;
		while(temp!=null) {
			temp=temp.next;
			length++;
		}
		return length;
	}

}

